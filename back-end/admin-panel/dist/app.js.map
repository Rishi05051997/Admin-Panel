{"version":3,"sources":["../src/app.js"],"names":["mongoose","require","app","PORT","Promise","global","connect","use","express","json","urlencoded","router","req","res","next","error","Error","message","status","get","msg","listen","console","log"],"mappings":";;AACA;;;;AAGA;;AACA;;;;;;AAHA;AACA,IAAMA,WAAWC,QAAQ,UAAR,CAAjB,C,CAHA;;;AAOA,IAAMC,MAAM,wBAAZ;AACA,IAAMC,OAAO,IAAb;AACAH,SAASI,OAAT,GAAmBC,OAAOD,OAA1B;AACAJ,SAASM,OAAT,CAAiB,uCAAjB;;AAGAJ,IAAIK,GAAJ,CAAQC,kBAAQC,IAAR,EAAR;AACAP,IAAIK,GAAJ,CAAQC,kBAAQE,UAAR,EAAR;AACAR,IAAIK,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACA;AACAL,IAAIK,GAAJ,CAAQ,MAAR,EAAgBI,cAAhB;;AAEAT,IAAIK,GAAJ,CAAQ,UAACK,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxB,QAAMC,QAAQ,IAAIC,KAAJ,CAAW,WAAX,CAAd;AACAD,UAAME,OAAN,GAAgB,eAAhB;AACAF,UAAMG,MAAN,GAAe,GAAf;AACAJ,SAAKC,KAAL;AACH,CALD;;AAOAb,IAAIK,GAAJ,CAAQ,UAACQ,KAAD,EAAQH,GAAR,EAAaC,GAAb,EAAkBC,IAAlB,EAA2B;AAC/BD,QAAIK,MAAJ,CAAWH,MAAMG,MAAN,IAAgB,IAA3B;AACA,WAAOL,IAAIJ,IAAJ,CAAS;AACZM,eAAQ;AACJE,qBAASF,MAAME;AADX;AADI,KAAT,CAAP;AAKH,CAPD;;AASAf,IAAIiB,GAAJ,CAAQ,GAAR,EAAa,UAACP,GAAD,EAAMC,GAAN,EAAc;AACvBA,QAAIJ,IAAJ,CAAS;AACLW,aAAK;AADA,KAAT;AAGH,CAJD;;AAOA;AACA;AACA;;AAEAlB,IAAImB,MAAJ,CAAWlB,IAAX,EAAkB,YAAM;AACpBmB,YAAQC,GAAR,wBAAiCpB,IAAjC;AACH,CAFD","file":"app.js","sourcesContent":["// const express = require('express');\r\nimport express from \"express\";\r\n// import  mongoose from \" mongoose\";\r\nconst mongoose = require('mongoose');\r\nimport {router} from '../src/config/routes'\r\nimport logger from 'morgan';\r\n\r\nconst app = express(); \r\nconst PORT = 3000;\r\nmongoose.Promise = global.Promise;\r\nmongoose.connect('mongodb://localhost/associate-builder');\r\n\r\n\r\napp.use(express.json());\r\napp.use(express.urlencoded());\r\napp.use(logger('dev'));\r\n// middleware \r\napp.use('/api', router);\r\n\r\napp.use((req, res ,next) => {\r\n    const error = new Error ('Not found');\r\n    error.message = \"Invalid Route\"\r\n    error.status = 404;\r\n    next(error);\r\n})\r\n\r\napp.use((error, req, res, next) => {\r\n    res.status(error.status || 5000)\r\n    return res.json({\r\n        error : {\r\n            message: error.message\r\n        }\r\n    })\r\n})\r\n\r\napp.get('/', (req, res) => {\r\n    res.json({\r\n        msg: 'Welcome to Associate builder backend...!!!'\r\n    })\r\n})\r\n\r\n\r\n// app.get('/associates', (res, req) => {\r\n//     res.json(associates);\r\n// })\r\n\r\napp.listen(PORT , () => {\r\n    console.log(`server running at ${PORT}`)\r\n});"]}